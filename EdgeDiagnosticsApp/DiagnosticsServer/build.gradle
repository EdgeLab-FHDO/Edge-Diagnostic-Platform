plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id "com.palantir.docker"
}

group 'de.fh-dortmund'
version 'v1'

if(!project.hasProperty('dockerDServer')) {
    tasks.all { task ->
        if (task.name.contains("docker")) {
            task.enabled = false
        }
    }
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    implementation project(':EdgeDiagnosticsApp:CommonUtils')

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    mainClassName = 'DiagnosticsServer.Server'
}

run.onlyIf {project.hasProperty('runDServer')}


task fatJar(type: Jar) {
    manifest {
        attributes "Main-Class": mainClassName
    }
    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

docker {
    dependsOn fatJar
    name "diagnostics_server:${project.version}"
    dockerfile file('Dockerfile')
    files tasks.fatJar.outputs.files
    tag 'DockerHub', "jpcr3108/diagnostics_server:${project.version}"
}