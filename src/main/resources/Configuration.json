{
  "ioData": {
      "inputs": [
        {"type": "ConsoleInput","name": "console_in"},
        {"type": "MatchMaker-Random","name": "match_m"},
        {"type": "Scenario", "name": "dummy"},
        {"type":  "NodeResourceLimiter", "name": "limit"},
        {"type": "GenericPOST","name": "client_in_rest","address": "/client/register","port": 4567,
          "command" :  "register_client $body",
          "information": [],
          "@IOType" : "CustomCommand"
        },
        {"type": "GenericPOST","name": "node_in_rest","address": "/node/register","port": 4567,
          "command" :  "register_node $body",
          "information": [],
          "@IOType" : "CustomCommand"
        },
        {"type": "GenericPOST","name": "assignment_rest","address": "/client/assign","port": 4567,
          "command" :  "assign_client $id",
          "information": ["id"],
          "@IOType" : "CustomCommand"
        }
      ],
      "outputs": [
        {"type": "ConsoleOutput","name": "console_out"},
        {"type": "MasterUtility","name": "util"},
        {"type": "AdvantEdgeClient","name": "advant_e", "address" : "http://localhost", "port" : 10500},
        {"type": "ScenarioDispatcher","name": "scenario_dispatcher"},
        {"type": "ScenarioEditor","name": "scenario_editor"},
        {"type": "SSHClient","name": "ssh"},
        {"type": "FileOutput", "name": "file_out"},
        {"type": "GenericGET","name": "rest_limit", "address": "/limit","port": 4567},
        {"type": "GenericGET","name": "get2", "address": "/client/get_node/:client_id","port": 4567},
        {"type": "MasterUtility","name": "util"},
        {"type": "MatchMaker-Random","name": "match_m"},
        {"type":  "NodeResourceLimiter", "name": "limit"}
      ]
    },
  "connections" : [
    {
      "in" : "console_in",
      "out" : "console_out",
      "commands" : {
        "deploy_application" : "console helmChartExecution" ,
        "update_gui" : "console GUIUpdateExecution" ,
        "node_request" : "console matchMakingExecution" ,
        "save_statistics" : "console LoggerExecution" ,
        "show_statistics" : "console GUIUpdateExecution"
      }
    },
    {
      "in" : "console_in",
      "out" : "file_out",
      "commands" : {
        "define_encoding $ENCODING" : "file_out encoding $ENCODING",
        "create_file $PATH" : "file_out create $PATH Hello World!",
        "append_to_file $PATH" : "file_out append $PATH \nHello Back!"
      }
    },
    {
      "in" : "console_in",
      "out" : "ssh",
      "commands" : {
        "setup_ssh $HOST $PORT $USERNAME $PASSWORD" : "ssh setup $HOST $PORT $USERNAME $PASSWORD",
        "test_setup" : "ssh setup 192.168.0.127 22 jpcr3108 jp1234",
        "see_files" : "ssh execute -f ls",
        "check_processes" : "ssh execute -f ps -ef | grep dummy | grep -v grep",
        "execute_dummy" : "ssh execute -b bash dummy.sh",
        "execute_dummy_sudo" : "ssh execute -b sudo bash dummy.sh",
        "kill $PID" : "ssh execute -f sudo kill $PID",
        "send_dummy" : "ssh sendFile src/test/resources/ManualTestResources/SSHClientTest/dummy.sh /home/jpcr3108/dummy.sh"
      }
    },
    {
      "in" : "console_in",
      "out" : "util",
      "commands" : {
        "exit" : "util exit",
        "start_rest_server" : "util runRunner RestServer",
        "start_runner $runner_name" : "util runRunner $runner_name"
      }
    },
    {
      "in" : "console_in",
      "out" : "advant_e",
      "commands" : {
        "ae_create_scenario $scenario_name $scenario_path" : "advantEdge create $scenario_name $scenario_path",
        "ae_deploy_scenario $scenario_name" : "advantEdge deploy $scenario_name",
        "ae_terminate_active $sandbox_name" : "advantEdge terminate $sandbox_name"
      }
    },
    {
      "in" : "console_in",
      "out" : "scenario_editor",
      "commands" : {
        "create_scenario $scenario_name" : "editor create $scenario_name",
        "add_event $event_name $execution_time" : "editor addEvent $event_name $execution_time",
        "delete_event" : "editor deleteEvent",
        "save_scenario $path" : "editor toFile $path",
        "read_scenario $path" : "editor fromFile $path"
      }
    },
    {
      "in" : "console_in",
      "out" : "scenario_dispatcher",
      "commands" : {
        "load_scenario $path" : "dispatcher fromFile $path",
        "run_scenario" : "dispatcher run",
        "pause_scenario" : "dispatcher pause",
        "resume_scenario" : "dispatcher resume"
      }
    },
    {
      "in" : "dummy",
      "out" : "console_out",
      "commands" : {
        "deploy_application" : "console helmChartExecution" ,
        "update_gui" : "console GUIUpdateExecution" ,
        "node_request" : "console matchMakingExecution"
      }
    },
    {
      "in" : "console_in",
      "out" : "match_m",
      "commands" : {
        "assign_client $client_id" : "matchMaker assign_client $client_id"
      }
    },
    {
      "in" : "client_in_rest",
      "out" : "match_m",
      "commands" : {
        "register_client $client_as_json_string" : "matchMaker register_client $client_as_json_string"
      }
    },
    {
      "in" : "node_in_rest",
      "out" : "match_m",
      "commands" : {
        "register_node $node_as_json_string" : "matchMaker register_node $node_as_json_string"
      }
    },
    {
      "in" : "assignment_rest",
      "out" : "match_m",
      "commands" : {
        "assign_client $client_id" : "matchMaker assign_client $client_id"
      }
    },
    {
      "in" : "match_m",
      "out" : "get2",
      "commands" : {
        "give_node $client_id $node_json_body": "toGET resource $client_id $node_json_body"
      }
    },
    {
      "in" : "console_in",
      "out" : "limit",
      "commands" : {
        "limit_node $tag $CPU_limit" : "limit cores $tag $CPU_limit"
      }
    },
    {
      "in" : "limit",
      "out" : "rest_limit",
      "commands" : {
        "set_limits $limits" : "toGET resource $limits"
      }
    }
  ]
}